<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="262" onload="init(evt)" viewBox="0 0 1200 262" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="262.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="245" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="245" > </text>
<g id="frames">
<g >
<title>[unknown] (1,154 samples, 0.02%)</title><rect x="988.9" y="149" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="991.87" y="159.5" ></text>
</g>
<g >
<title>_dl_map_object (54,652 samples, 0.81%)</title><rect x="889.1" y="181" width="9.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="892.06" y="191.5" ></text>
</g>
<g >
<title>[unknown] (8,731 samples, 0.13%)</title><rect x="1170.3" y="117" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1173.32" y="127.5" ></text>
</g>
<g >
<title>[unknown] (6,767 samples, 0.10%)</title><rect x="1039.7" y="165" width="1.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1042.75" y="175.5" ></text>
</g>
<g >
<title>[unknown] (7,938 samples, 0.12%)</title><rect x="51.8" y="133" width="1.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="54.77" y="143.5" ></text>
</g>
<g >
<title>check_match (164,454 samples, 2.44%)</title><rect x="990.0" y="181" width="28.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="992.98" y="191.5" >ch..</text>
</g>
<g >
<title>[unknown] (7,071 samples, 0.10%)</title><rect x="34.4" y="117" width="1.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="37.37" y="127.5" ></text>
</g>
<g >
<title>syscall (38,601 samples, 0.57%)</title><rect x="46.4" y="149" width="6.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="49.41" y="159.5" ></text>
</g>
<g >
<title>[unknown] (504,312 samples, 7.47%)</title><rect x="496.5" y="85" width="88.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="499.54" y="95.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (7,420 samples, 0.11%)</title><rect x="887.5" y="165" width="1.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="890.54" y="175.5" ></text>
</g>
<g >
<title>std::sys::random::linux::hashmap_random_keys (14,164 samples, 0.21%)</title><rect x="117.6" y="181" width="2.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="120.59" y="191.5" ></text>
</g>
<g >
<title>[unknown] (970 samples, 0.01%)</title><rect x="888.8" y="165" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="891.84" y="175.5" ></text>
</g>
<g >
<title>[unknown] (5,008 samples, 0.07%)</title><rect x="886.7" y="101" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.66" y="111.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (11,051 samples, 0.16%)</title><rect x="23.2" y="165" width="1.9" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="26.17" y="175.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;wasmtime_environ::module::Module&gt; (280,430 samples, 4.15%)</title><rect x="641.6" y="165" width="49.0" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="644.56" y="175.5" >core..</text>
</g>
<g >
<title>[unknown] (251,630 samples, 3.73%)</title><rect x="756.5" y="149" width="44.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="759.48" y="159.5" >[unk..</text>
</g>
<g >
<title>__GI___sigaltstack (8,731 samples, 0.13%)</title><rect x="1170.3" y="149" width="1.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1173.32" y="159.5" ></text>
</g>
<g >
<title>[unknown] (18,724 samples, 0.28%)</title><rect x="80.1" y="85" width="3.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="83.08" y="95.5" ></text>
</g>
<g >
<title>dl_main (2,135,739 samples, 31.63%)</title><rect x="235.0" y="149" width="373.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="237.96" y="159.5" >dl_main</text>
</g>
<g >
<title>[unknown] (17,041 samples, 0.25%)</title><rect x="232.0" y="133" width="3.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="234.98" y="143.5" ></text>
</g>
<g >
<title>mprotect (134,634 samples, 1.99%)</title><rect x="584.7" y="133" width="23.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="587.67" y="143.5" >m..</text>
</g>
<g >
<title>_dl_sysdep_start (2,154,388 samples, 31.91%)</title><rect x="231.7" y="165" width="376.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="234.70" y="175.5" >_dl_sysdep_start</text>
</g>
<g >
<title>@plt (165,090 samples, 2.44%)</title><rect x="128.4" y="181" width="28.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="131.39" y="191.5" >@plt</text>
</g>
<g >
<title>[unknown] (134,634 samples, 1.99%)</title><rect x="584.7" y="101" width="23.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="587.67" y="111.5" >[..</text>
</g>
<g >
<title>[unknown] (26,770 samples, 0.40%)</title><rect x="78.7" y="133" width="4.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="81.68" y="143.5" ></text>
</g>
<g >
<title>[unknown] (16,168 samples, 0.24%)</title><rect x="157.2" y="133" width="2.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="160.24" y="143.5" ></text>
</g>
<g >
<title>do_lookup_x (114,591 samples, 1.70%)</title><rect x="1018.7" y="181" width="20.0" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1021.72" y="191.5" ></text>
</g>
<g >
<title>std::sys::sync::condvar::futex::Condvar::wait_timeout (35,095 samples, 0.52%)</title><rect x="36.0" y="149" width="6.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="39.02" y="159.5" ></text>
</g>
<g >
<title>malloc (4,123 samples, 0.06%)</title><rect x="1038.9" y="181" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1041.86" y="191.5" ></text>
</g>
<g >
<title>[unknown] (4,888 samples, 0.07%)</title><rect x="989.1" y="133" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="992.08" y="143.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (174,999 samples, 2.59%)</title><rect x="199.2" y="165" width="30.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="202.22" y="175.5" >__..</text>
</g>
<g >
<title>[unknown] (13,352 samples, 0.20%)</title><rect x="885.2" y="165" width="2.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="888.21" y="175.5" ></text>
</g>
<g >
<title>[unknown] (970 samples, 0.01%)</title><rect x="888.8" y="101" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="891.84" y="111.5" ></text>
</g>
<g >
<title>pthread_getaffinity_np@@GLIBC_2.3.4 (4,144 samples, 0.06%)</title><rect x="743.3" y="165" width="0.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="746.34" y="175.5" ></text>
</g>
<g >
<title>tokio-runtime-w (677,437 samples, 10.03%)</title><rect x="10.0" y="197" width="118.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >tokio-runtime-w</text>
</g>
<g >
<title>new_heap (7,730 samples, 0.11%)</title><rect x="1039.6" y="181" width="1.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1042.58" y="191.5" ></text>
</g>
<g >
<title>[unknown] (4,477 samples, 0.07%)</title><rect x="1171.1" y="69" width="0.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1174.06" y="79.5" ></text>
</g>
<g >
<title>__mmap (13,352 samples, 0.20%)</title><rect x="885.2" y="181" width="2.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="888.21" y="191.5" ></text>
</g>
<g >
<title>sha2::sha256::x86::digest_blocks (447,733 samples, 6.63%)</title><rect x="1089.1" y="181" width="78.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1092.14" y="191.5" >sha2::sha..</text>
</g>
<g >
<title>epoll_wait (35,693 samples, 0.53%)</title><rect x="25.1" y="165" width="6.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="28.10" y="175.5" ></text>
</g>
<g >
<title>std::sys::sync::mutex::futex::Mutex::lock_contended (132,811 samples, 1.97%)</title><rect x="94.4" y="149" width="23.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="97.37" y="159.5" >s..</text>
</g>
<g >
<title>std::path::Components::len_before_body (73,839 samples, 1.09%)</title><rect x="1177.1" y="149" width="12.9" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1180.10" y="159.5" ></text>
</g>
<g >
<title>_dl_relocate_object (2,001,105 samples, 29.64%)</title><rect x="235.0" y="133" width="349.7" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="237.96" y="143.5" >_dl_relocate_object</text>
</g>
<g >
<title>[unknown] (1,202 samples, 0.02%)</title><rect x="888.6" y="101" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="891.63" y="111.5" ></text>
</g>
<g >
<title>[unknown] (24,453 samples, 0.36%)</title><rect x="31.3" y="149" width="4.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="34.34" y="159.5" ></text>
</g>
<g >
<title>std::sys::sync::condvar::futex::Condvar::wait (16,372 samples, 0.24%)</title><rect x="122.3" y="165" width="2.8" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="125.28" y="175.5" ></text>
</g>
<g >
<title>__libc_calloc (224,074 samples, 3.32%)</title><rect x="160.1" y="165" width="39.1" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="163.06" y="175.5" >__l..</text>
</g>
<g >
<title>[unknown] (134,634 samples, 1.99%)</title><rect x="584.7" y="117" width="23.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="587.67" y="127.5" >[..</text>
</g>
<g >
<title>__rdl_dealloc (2,163 samples, 0.03%)</title><rect x="20.2" y="165" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="23.21" y="175.5" ></text>
</g>
<g >
<title>[unknown] (13,352 samples, 0.20%)</title><rect x="885.2" y="149" width="2.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="888.21" y="159.5" ></text>
</g>
<g >
<title>tokio::runtime::context::runtime::enter_runtime (725 samples, 0.01%)</title><rect x="122.1" y="181" width="0.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="125.07" y="191.5" ></text>
</g>
<g >
<title>[unknown] (1,572 samples, 0.02%)</title><rect x="1040.7" y="117" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1043.66" y="127.5" ></text>
</g>
<g >
<title>[unknown] (35,692 samples, 0.53%)</title><rect x="25.1" y="149" width="6.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="28.10" y="159.5" ></text>
</g>
<g >
<title>[unknown] (174,999 samples, 2.59%)</title><rect x="199.2" y="117" width="30.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="202.22" y="127.5" >[u..</text>
</g>
<g >
<title>[unknown] (970 samples, 0.01%)</title><rect x="888.8" y="117" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="891.84" y="127.5" ></text>
</g>
<g >
<title>start_thread (51,027 samples, 0.76%)</title><rect x="1167.4" y="181" width="8.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1170.39" y="191.5" ></text>
</g>
<g >
<title>__GI___sigaltstack (13,505 samples, 0.20%)</title><rect x="88.6" y="165" width="2.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="91.61" y="175.5" ></text>
</g>
<g >
<title>__madvise (26,770 samples, 0.40%)</title><rect x="78.7" y="181" width="4.7" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="81.68" y="191.5" ></text>
</g>
<g >
<title>std::sys::pal::unix::thread::Thread::new::thread_start (4,307 samples, 0.06%)</title><rect x="1176.3" y="181" width="0.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1179.30" y="191.5" ></text>
</g>
<g >
<title>do_lookup_x (301,966 samples, 4.47%)</title><rect x="690.6" y="165" width="52.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="693.57" y="175.5" >do_lo..</text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1,373 samples, 0.02%)</title><rect x="66.4" y="165" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="69.40" y="175.5" ></text>
</g>
<g >
<title>[unknown] (4,144 samples, 0.06%)</title><rect x="743.3" y="149" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="746.34" y="159.5" ></text>
</g>
<g >
<title>strcmp (54,652 samples, 0.81%)</title><rect x="889.1" y="165" width="9.5" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="892.06" y="175.5" ></text>
</g>
<g >
<title>[unknown] (8,377 samples, 0.12%)</title><rect x="12.2" y="165" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.20" y="175.5" ></text>
</g>
<g >
<title>[unknown] (1,202 samples, 0.02%)</title><rect x="888.6" y="117" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="891.63" y="127.5" ></text>
</g>
<g >
<title>[unknown] (174,999 samples, 2.59%)</title><rect x="199.2" y="149" width="30.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="202.22" y="159.5" >[u..</text>
</g>
<g >
<title>[unknown] (970 samples, 0.01%)</title><rect x="888.8" y="149" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="891.84" y="159.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once{{vtable-shim}} (16,744 samples, 0.25%)</title><rect x="1167.4" y="165" width="2.9" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1170.39" y="175.5" ></text>
</g>
<g >
<title>[unknown] (970 samples, 0.01%)</title><rect x="888.8" y="69" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="891.84" y="79.5" ></text>
</g>
<g >
<title>[unknown] (8,731 samples, 0.13%)</title><rect x="1170.3" y="101" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1173.32" y="111.5" ></text>
</g>
<g >
<title>[unknown] (338,482 samples, 5.01%)</title><rect x="12.2" y="181" width="59.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.19" y="191.5" >[unkno..</text>
</g>
<g >
<title>[unknown] (4,144 samples, 0.06%)</title><rect x="743.3" y="117" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="746.34" y="127.5" ></text>
</g>
<g >
<title>__libc_calloc (11,714 samples, 0.17%)</title><rect x="16.3" y="165" width="2.1" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="19.34" y="175.5" ></text>
</g>
<g >
<title>arena_get2.part.0 (6,882 samples, 0.10%)</title><rect x="988.8" y="181" width="1.2" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="991.78" y="191.5" ></text>
</g>
<g >
<title>[unknown] (7,066 samples, 0.10%)</title><rect x="34.4" y="101" width="1.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="37.38" y="111.5" ></text>
</g>
<g >
<title>[unknown] (6,386 samples, 0.09%)</title><rect x="887.7" y="149" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="890.72" y="159.5" ></text>
</g>
<g >
<title>__close_nocancel (4,888 samples, 0.07%)</title><rect x="989.1" y="165" width="0.8" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="992.08" y="175.5" ></text>
</g>
<g >
<title>__malloc_arena_thread_freeres (10,419 samples, 0.15%)</title><rect x="18.4" y="165" width="1.8" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="21.39" y="175.5" ></text>
</g>
<g >
<title>std::sys::random::linux::hashmap_random_keys (11,410 samples, 0.17%)</title><rect x="120.1" y="165" width="2.0" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="123.08" y="175.5" ></text>
</g>
<g >
<title>__GI___get_nprocs (1,154 samples, 0.02%)</title><rect x="988.9" y="165" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="991.87" y="175.5" ></text>
</g>
<g >
<title>[unknown] (134,634 samples, 1.99%)</title><rect x="584.7" y="37" width="23.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="587.67" y="47.5" >[..</text>
</g>
<g >
<title>[unknown] (134,634 samples, 1.99%)</title><rect x="584.7" y="69" width="23.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="587.67" y="79.5" >[..</text>
</g>
<g >
<title>__GI___prctl (16,168 samples, 0.24%)</title><rect x="157.2" y="165" width="2.9" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="160.24" y="175.5" ></text>
</g>
<g >
<title>[unknown] (5,008 samples, 0.07%)</title><rect x="886.7" y="117" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.66" y="127.5" ></text>
</g>
<g >
<title>[unknown] (13,505 samples, 0.20%)</title><rect x="88.6" y="133" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="91.61" y="143.5" ></text>
</g>
<g >
<title>__rust_dealloc (582 samples, 0.01%)</title><rect x="20.6" y="165" width="0.1" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="23.58" y="175.5" ></text>
</g>
<g >
<title>[unknown] (35,692 samples, 0.53%)</title><rect x="25.1" y="117" width="6.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="28.10" y="127.5" ></text>
</g>
<g >
<title>[unknown] (6,767 samples, 0.10%)</title><rect x="1039.7" y="149" width="1.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1042.75" y="159.5" ></text>
</g>
<g >
<title>__getauxval (702 samples, 0.01%)</title><rect x="91.0" y="165" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="93.97" y="175.5" ></text>
</g>
<g >
<title>[unknown] (24,453 samples, 0.36%)</title><rect x="31.3" y="133" width="4.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="34.34" y="143.5" ></text>
</g>
<g >
<title>__ctype_init (1,002 samples, 0.01%)</title><rect x="839.5" y="181" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="842.48" y="191.5" ></text>
</g>
<g >
<title>std::sys::sync::mutex::futex::Mutex::lock_contended (24,334 samples, 0.36%)</title><rect x="42.2" y="149" width="4.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="45.16" y="159.5" ></text>
</g>
<g >
<title>[unknown] (134,634 samples, 1.99%)</title><rect x="584.7" y="53" width="23.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="587.67" y="63.5" >[..</text>
</g>
<g >
<title>realloc (8,377 samples, 0.12%)</title><rect x="12.2" y="149" width="1.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="15.20" y="159.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (6,081 samples, 0.09%)</title><rect x="87.5" y="181" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="90.55" y="191.5" ></text>
</g>
<g >
<title>[unknown] (8,731 samples, 0.13%)</title><rect x="1170.3" y="133" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1173.32" y="143.5" ></text>
</g>
<g >
<title>[unknown] (3,559 samples, 0.05%)</title><rect x="52.5" y="117" width="0.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="55.53" y="127.5" ></text>
</g>
<g >
<title>toml_edit::parser::numbers::integer (67,847 samples, 1.00%)</title><rect x="744.6" y="165" width="11.9" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="747.62" y="175.5" ></text>
</g>
<g >
<title>[unknown] (258,312 samples, 3.83%)</title><rect x="943.6" y="149" width="45.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="946.64" y="159.5" >[unk..</text>
</g>
<g >
<title>pthread_attr_getguardsize (5,152 samples, 0.08%)</title><rect x="1173.0" y="149" width="0.9" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1176.01" y="159.5" ></text>
</g>
<g >
<title>[unknown] (4,888 samples, 0.07%)</title><rect x="989.1" y="149" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="992.08" y="159.5" ></text>
</g>
<g >
<title>[unknown] (162,213 samples, 2.40%)</title><rect x="556.3" y="53" width="28.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="559.33" y="63.5" >[u..</text>
</g>
<g >
<title>std::path::Path::_with_extension (73,839 samples, 1.09%)</title><rect x="1177.1" y="165" width="12.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1180.10" y="175.5" ></text>
</g>
<g >
<title>[unknown] (504,312 samples, 7.47%)</title><rect x="496.5" y="69" width="88.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="499.54" y="79.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (18,649 samples, 0.28%)</title><rect x="231.7" y="149" width="3.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="234.70" y="159.5" ></text>
</g>
<g >
<title>std::sys::sync::mutex::futex::Mutex::lock_contended (75,748 samples, 1.12%)</title><rect x="53.2" y="149" width="13.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="56.16" y="159.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (12,512 samples, 0.19%)</title><rect x="10.0" y="181" width="2.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>[unknown] (18,724 samples, 0.28%)</title><rect x="80.1" y="69" width="3.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="83.08" y="79.5" ></text>
</g>
<g >
<title>syscall (24,453 samples, 0.36%)</title><rect x="31.3" y="165" width="4.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="34.34" y="175.5" ></text>
</g>
<g >
<title>[unknown] (16,168 samples, 0.24%)</title><rect x="157.2" y="149" width="2.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="160.24" y="159.5" ></text>
</g>
<g >
<title>std::sys::pal::unix::thread::Thread::new::thread_start (25,489 samples, 0.38%)</title><rect x="1170.3" y="165" width="4.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1173.32" y="175.5" ></text>
</g>
<g >
<title>[unknown] (26,770 samples, 0.40%)</title><rect x="78.7" y="149" width="4.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="81.68" y="159.5" ></text>
</g>
<g >
<title>std::time::Instant::now (301,966 samples, 4.47%)</title><rect x="690.6" y="149" width="52.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="693.57" y="159.5" >std::..</text>
</g>
<g >
<title>std::sys::random::linux::getrandom (11,271 samples, 0.17%)</title><rect x="120.1" y="149" width="2.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="123.10" y="159.5" ></text>
</g>
<g >
<title>tokio::runtime::time::wheel::Wheel::poll (15,795 samples, 0.23%)</title><rect x="125.6" y="181" width="2.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="128.61" y="191.5" ></text>
</g>
<g >
<title>tokio::runtime::blocking::pool::Inner::run (132,815 samples, 1.97%)</title><rect x="94.4" y="165" width="23.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="97.37" y="175.5" >t..</text>
</g>
<g >
<title>__GI___tunables_init (5,049 samples, 0.07%)</title><rect x="838.6" y="181" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="841.59" y="191.5" ></text>
</g>
<g >
<title>[unknown] (4,888 samples, 0.07%)</title><rect x="989.1" y="117" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="992.08" y="127.5" ></text>
</g>
<g >
<title>[unknown] (977,921 samples, 14.48%)</title><rect x="413.8" y="117" width="170.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="416.77" y="127.5" >[unknown]</text>
</g>
<g >
<title>pthread_attr_getstack (4,380 samples, 0.06%)</title><rect x="1173.9" y="149" width="0.8" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1176.91" y="159.5" ></text>
</g>
<g >
<title>std::sys::sync::mutex::futex::Mutex::lock_contended (35,095 samples, 0.52%)</title><rect x="36.0" y="133" width="6.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="39.02" y="143.5" ></text>
</g>
<g >
<title>tokio::runtime::blocking::pool::Inner::run (100,400 samples, 1.49%)</title><rect x="35.6" y="165" width="17.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="38.61" y="175.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once{{vtable-shim}} (10,724 samples, 0.16%)</title><rect x="92.4" y="165" width="1.9" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="95.45" y="175.5" ></text>
</g>
<g >
<title>_int_free (5,016 samples, 0.07%)</title><rect x="1171.8" y="149" width="0.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1174.85" y="159.5" ></text>
</g>
<g >
<title>_int_malloc (515,476 samples, 7.63%)</title><rect x="898.7" y="181" width="90.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="901.69" y="191.5" >_int_malloc</text>
</g>
<g >
<title>[unknown] (17,041 samples, 0.25%)</title><rect x="232.0" y="117" width="3.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="234.98" y="127.5" ></text>
</g>
<g >
<title>tokio::loom::std::rand::seed (11,410 samples, 0.17%)</title><rect x="120.1" y="181" width="2.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="123.08" y="191.5" ></text>
</g>
<g >
<title>[unknown] (16,168 samples, 0.24%)</title><rect x="157.2" y="117" width="2.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="160.24" y="127.5" ></text>
</g>
<g >
<title>[unknown] (26,770 samples, 0.40%)</title><rect x="78.7" y="117" width="4.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="81.68" y="127.5" ></text>
</g>
<g >
<title>[wasmtime] (218,219 samples, 3.23%)</title><rect x="800.5" y="181" width="38.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="803.46" y="191.5" >[wa..</text>
</g>
<g >
<title>tokio::runtime::scheduler::multi_thread::worker::Context::run (75,764 samples, 1.12%)</title><rect x="53.2" y="165" width="13.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="56.16" y="175.5" ></text>
</g>
<g >
<title>all (6,752,162 samples, 100%)</title><rect x="10.0" y="213" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>[unknown] (8,731 samples, 0.13%)</title><rect x="1170.3" y="85" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1173.32" y="95.5" ></text>
</g>
<g >
<title>start_thread (165,825 samples, 2.46%)</title><rect x="88.6" y="181" width="29.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="91.61" y="191.5" >st..</text>
</g>
<g >
<title>[unknown] (13,505 samples, 0.20%)</title><rect x="88.6" y="149" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="91.61" y="159.5" ></text>
</g>
<g >
<title>postcard::de::deserializer::Deserializer&lt;F&gt;::try_take_varint_u64 (275,778 samples, 4.08%)</title><rect x="1040.9" y="181" width="48.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1043.93" y="191.5" >post..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (260,669 samples, 3.86%)</title><rect x="839.7" y="181" width="45.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="842.65" y="191.5" >__me..</text>
</g>
<g >
<title>[unknown] (504,312 samples, 7.47%)</title><rect x="496.5" y="101" width="88.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="499.54" y="111.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (4,888 samples, 0.07%)</title><rect x="989.1" y="101" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="992.08" y="111.5" ></text>
</g>
<g >
<title>[unknown] (3,680,594 samples, 54.51%)</title><rect x="157.2" y="181" width="643.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="160.24" y="191.5" >[unknown]</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (16,744 samples, 0.25%)</title><rect x="1167.4" y="149" width="2.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1170.39" y="159.5" ></text>
</g>
<g >
<title>[unknown] (4,706 samples, 0.07%)</title><rect x="1040.1" y="133" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1043.11" y="143.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (6,181 samples, 0.09%)</title><rect x="91.3" y="165" width="1.1" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="94.31" y="175.5" ></text>
</g>
<g >
<title>std::thread::current::set_current (8,750 samples, 0.13%)</title><rect x="1174.8" y="165" width="1.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1177.77" y="175.5" ></text>
</g>
<g >
<title>[unknown] (18,724 samples, 0.28%)</title><rect x="80.1" y="101" width="3.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="83.08" y="111.5" ></text>
</g>
<g >
<title>__call_tls_dtors (15,282 samples, 0.23%)</title><rect x="13.7" y="165" width="2.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="16.67" y="175.5" ></text>
</g>
<g >
<title>__libc_calloc (11,523 samples, 0.17%)</title><rect x="76.7" y="181" width="2.0" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="79.66" y="191.5" ></text>
</g>
<g >
<title>wasmtime_cache::fs_write_atomic (73,839 samples, 1.09%)</title><rect x="1177.1" y="181" width="12.9" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1180.10" y="191.5" ></text>
</g>
<g >
<title>__call_tls_dtors (30,460 samples, 0.45%)</title><rect x="71.3" y="181" width="5.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="74.34" y="191.5" ></text>
</g>
<g >
<title>__strlen_avx2 (10,859 samples, 0.16%)</title><rect x="229.8" y="165" width="1.9" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="232.81" y="175.5" ></text>
</g>
<g >
<title>[unknown] (6,386 samples, 0.09%)</title><rect x="887.7" y="133" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="890.72" y="143.5" ></text>
</g>
<g >
<title>[unknown] (174,999 samples, 2.59%)</title><rect x="199.2" y="133" width="30.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="202.22" y="143.5" >[u..</text>
</g>
<g >
<title>[unknown] (970 samples, 0.01%)</title><rect x="888.8" y="133" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="891.84" y="143.5" ></text>
</g>
<g >
<title>wasmtime::runtime::func::HostContext::from_closure (251,630 samples, 3.73%)</title><rect x="756.5" y="165" width="44.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="759.48" y="175.5" >wasm..</text>
</g>
<g >
<title>__rpc_thread_destroy (23,960 samples, 0.35%)</title><rect x="83.4" y="181" width="4.1" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="86.35" y="191.5" ></text>
</g>
<g >
<title>clap_builder::builder::command::Command::required_graph (190,866 samples, 2.83%)</title><rect x="608.2" y="165" width="33.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="611.20" y="175.5" >cl..</text>
</g>
<g >
<title>[unknown] (970 samples, 0.01%)</title><rect x="888.8" y="85" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="891.84" y="95.5" ></text>
</g>
<g >
<title>[unknown] (4,144 samples, 0.06%)</title><rect x="743.3" y="133" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="746.34" y="143.5" ></text>
</g>
<g >
<title>__rdl_dealloc (1,249 samples, 0.02%)</title><rect x="91.1" y="165" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="94.09" y="175.5" ></text>
</g>
<g >
<title>[unknown] (26,770 samples, 0.40%)</title><rect x="78.7" y="165" width="4.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="81.68" y="175.5" ></text>
</g>
<g >
<title>[unknown] (258,312 samples, 3.83%)</title><rect x="943.6" y="165" width="45.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="946.64" y="175.5" >[unk..</text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (25,991 samples, 0.38%)</title><rect x="66.8" y="165" width="4.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="69.80" y="175.5" ></text>
</g>
<g >
<title>get_free_list (643 samples, 0.01%)</title><rect x="1038.7" y="181" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1041.75" y="191.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (1,643 samples, 0.02%)</title><rect x="1172.7" y="149" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1175.72" y="159.5" ></text>
</g>
<g >
<title>__munmap (970 samples, 0.01%)</title><rect x="888.8" y="181" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="891.84" y="191.5" ></text>
</g>
<g >
<title>tokio::runtime::scheduler::multi_thread::worker::Context::run (2,672 samples, 0.04%)</title><rect x="125.1" y="181" width="0.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="128.14" y="191.5" ></text>
</g>
<g >
<title>__mprotect (7,420 samples, 0.11%)</title><rect x="887.5" y="181" width="1.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="890.54" y="191.5" ></text>
</g>
<g >
<title>[unknown] (13,352 samples, 0.20%)</title><rect x="885.2" y="133" width="2.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="888.21" y="143.5" ></text>
</g>
<g >
<title>[unknown] (13,505 samples, 0.20%)</title><rect x="88.6" y="117" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="91.61" y="127.5" ></text>
</g>
<g >
<title>wasmtime (6,074,725 samples, 89.97%)</title><rect x="128.4" y="197" width="1061.6" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="131.39" y="207.5" >wasmtime</text>
</g>
<g >
<title>[unknown] (260,669 samples, 3.86%)</title><rect x="839.7" y="165" width="45.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="842.65" y="175.5" >[unk..</text>
</g>
<g >
<title>[unknown] (134,634 samples, 1.99%)</title><rect x="584.7" y="85" width="23.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="587.67" y="95.5" >[..</text>
</g>
<g >
<title>[unknown] (35,692 samples, 0.53%)</title><rect x="25.1" y="133" width="6.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="28.10" y="143.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (895 samples, 0.01%)</title><rect x="66.6" y="165" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="69.64" y="175.5" ></text>
</g>
<g >
<title>pthread_getattr_np (2,308 samples, 0.03%)</title><rect x="744.1" y="165" width="0.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="747.06" y="175.5" ></text>
</g>
<g >
<title>_int_free (14,008 samples, 0.21%)</title><rect x="20.7" y="165" width="2.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="23.69" y="175.5" ></text>
</g>
<g >
<title>tokio::runtime::scheduler::multi_thread::park::Parker::park (16,859 samples, 0.25%)</title><rect x="122.2" y="181" width="2.9" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="125.20" y="191.5" ></text>
</g>
</g>
</svg>
